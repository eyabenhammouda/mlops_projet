name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
    # 1. Vérification du dépôt (Clone le code)
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Configuration de Python
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8

    # 3. Créer l'environnement virtuel et installer les dépendances
    - name: Install dependencies
      run: |
        python3 -m venv venv
        . venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    # 4. Préparer les données
    - name: Prepare data
      run: |
        . venv/bin/activate
        make prepare_data

    # 5. Entraîner le modèle
    - name: Train model
      run: |
        . venv/bin/activate
        make train_model

    # 6. Évaluer le modèle
    - name: Evaluate model
      run: |
        . venv/bin/activate
        make evaluate_model



  docker:
    runs-on: ubuntu-latest

    steps:
    # 1. Vérification du dépôt
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Installer Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # 3. Connexion à DockerHub (mettre les secrets `DOCKER_USERNAME` et `DOCKER_PASSWORD` dans GitHub)
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 4. Construire et pousser l'image Docker
    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/$(IMAGE_NAME) .
        docker tag $(IMAGE_NAME) ${{ secrets.DOCKER_USERNAME }}/$(IMAGE_NAME)
        docker push ${{ secrets.DOCKER_USERNAME }}/$(IMAGE_NAME)

  mlflow:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Start MLflow Server
      run: |
        . venv/bin/activate
        make start-mlflow

  monitoring:
    runs-on: ubuntu-latest

    steps:
    - name: Start Elasticsearch and Kibana
      run: |
        docker-compose up -d

